{"version":3,"sources":["api/users.ts","services/user.ts","components/NewTodo/NewTodo.tsx","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","pattern","NewTodo","onSubmit","useState","title","setTitle","setUserId","titleErrorMessage","setTitleErrorMessage","hasUserIdError","setHasUserIdError","action","method","event","preventDefault","test","completed","className","htmlFor","type","placeholder","value","onChange","target","disabled","users","map","UserInfo","href","TodoInfo","todo","classNames","TodoList","todos","initialTodos","getNewTodoId","Math","max","App","setTodos","newTodo","currentTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7522918.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport const getUserById = (userId: number): User | null => {\n  return usersFromServer.find(user => user.id === userId) || null;\n};\n","import { useState } from 'react';\n\nimport users from '../../api/users';\nimport { Todo } from '../../types/Todo';\nimport { getUserById } from '../../services/user';\n\nconst pattern = /^[a-zA-Zа-яА-ЯіІїЇєЄёЁґҐ0-9\\s]+$/;\n\ntype Props = {\n  onSubmit: (post: Todo) => void;\n};\n\nexport const NewTodo: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [userId, setUserId] = useState(0);\n\n  const [titleErrorMessage, setTitleErrorMessage] = useState('');\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n\n    if (titleErrorMessage) {\n      setTitleErrorMessage('');\n    }\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n\n    if (hasUserIdError) {\n      setHasUserIdError(!hasUserIdError);\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!title) {\n      setTitleErrorMessage('Please enter a title');\n    } else if (!pattern.test(title)) {\n      setTitleErrorMessage('Please use only letters (ua and en),'\n        + 'digits, and spaces in the title');\n    } else {\n      setTitleErrorMessage('');\n    }\n\n    setHasUserIdError(!userId);\n\n    if (!title || !userId || !pattern.test(title)) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title,\n      completed: false,\n      userId,\n      user: getUserById(userId),\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label htmlFor=\"titleInput\">\n          Title:\n        </label>\n\n        <input\n          type=\"text\"\n          id=\"titleInput\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {titleErrorMessage && (\n          <span className=\"error\">\n            {titleErrorMessage}\n          </span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"userSelect\">\n          User:\n        </label>\n\n        <select\n          id=\"userSelect\"\n          data-cy=\"userSelect\"\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\" disabled>\n            Choose a user\n          </option>\n\n          {users.map(user => (\n            <option value={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">\n            Please choose a user\n          </span>\n        )}\n      </div>\n\n      <button type=\"submit\" data-cy=\"submitButton\">\n        Add\n      </button>\n    </form>\n  );\n};\n","import { User } from '../../types/User';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => (\n  <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n    {user?.name}\n  </a>\n);\n","import classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => (\n  <article\n    data-id={todo.id}\n    className={classNames(\n      'TodoInfo',\n      { 'TodoInfo--completed': todo.completed },\n    )}\n  >\n    <h2 className=\"TodoInfo__title\">\n      {todo.title}\n    </h2>\n\n    <UserInfo user={todo.user} />\n  </article>\n);\n","import { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo\n          todo={todo}\n          data-id={todo.id}\n        />\n      ))}\n    </section>\n  );\n};\n","import { useState } from 'react';\n\nimport './App.scss';\nimport { NewTodo } from './components/NewTodo/NewTodo';\nimport { TodoList } from './components/TodoList';\nimport todosFromServer from './api/todos';\nimport { getUserById } from './services/user';\nimport { Todo } from './types/Todo';\n\nconst initialTodos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nconst getNewTodoId = (todos: Todo[]) => {\n  const maxId = Math.max(\n    ...todos.map(todo => todo.id),\n  );\n\n  return maxId + 1;\n};\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const addTodo = (todo: Todo) => {\n    const newTodo = {\n      ...todo,\n      id: getNewTodoId(todos),\n    };\n\n    setTodos(currentTodos => [...currentTodos, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <NewTodo onSubmit={addTodo} />\n\n      <TodoList todos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}